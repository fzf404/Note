(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{927:function(n,e){n.exports="\x3c!--\ntitle: 30-Web编程\nsort:\n--\x3e\n\n# PythonWeb 编程\n\n> CS 架构与 BS 架构\n>\n> `Client/Server`与``Browser/Server`\n\n## WSGI\n\nWeb Server Gateway Interface\n\n### 运行 WSGI 服务\n\n- 先写一个符合 WSGI 标准的函数\n\n  ```python\n  def application(environ, start_response):\n      # environ:包含所有http请求信息的dict\n      # start_response:发送http响应的函数\n      start_response('200 OK', [('Content-Type', 'text/html')])\n      return [b'<h1>Hello, web!</h1>']\n  ```\n\n- 再写一个启动器\n\n  ```python\n  # server.py\n  # 从wsgiref模块导入:\n  from wsgiref.simple_server import make_server\n  # 导入我们自己编写的application函数:\n  from hello import application\n\n  # 创建一个服务器，IP地址为空，端口是8000，处理函数是application:\n  httpd = make_server('', 8000, application)\n  print('Serving HTTP on port 8000...')\n  # 开始监听HTTP请求:\n  httpd.serve_forever()\n  ```\n\n- 更复杂的函数\n\n  ```python\n  def application(environ, start_response):\n      start_response('200 OK', [('Content-Type', 'text/html')])\n      body = '<h1>Hello, %s!</h1>' % (environ['PATH_INFO'][1:] or 'web')\n      # 获取URL并显示\n      return [body.encode('utf-8')]\n  ```\n\n## 使用 Flask 框架\n\n- 示例程序\n\n  ```python\n  from flask import Flask\n  from flask import request\n\n  app = Flask(__name__)\t# 文件名\n\n\n  @app.route('/', methods=['GET', 'POST'])\t# 使用装饰器\n  def home():\n      return '<h1>Home</h1>'\n\n\n  @app.route('/signin', methods=['GET'])\n  def signin_form():\n      return '''<form action=\"/signin\" method=\"post\">\n                <p><input name=\"username\"></p>\n                <p><input name=\"password\" type=\"password\"></p>\n                <p><button type=\"submit\">Sign In</button></p>\n                </form>'''\n\n\n  @app.route('/signin', methods=['POST'])\n  def signin():\n      # 需要从request对象读取表单内容：\n      if request.form['username'] == 'admin' and request.form['password'] == 'password':\n          return '<h3>Hello, admin!</h3>'\n      return '<h3>Bad username or password.</h3>'\n\n\n  if __name__ == '__main__':\n      app.run()\n  ```\n\n## 使用模板\n\n即 MVC：Model-View-Controller，中文名“模型-视图-控制器”\n\n- 变量的实例模板的叫 V\n- 定义变量的字典叫 M\n\n### 修改前一个程序\n\n```python\nfrom flask import Flask, request, render_template\n\napp = Flask(__name__)\n\n@app.route('/', methods=['GET', 'POST'])\ndef home():\n    return render_template('home.html')\n\n@app.route('/signin', methods=['GET'])\ndef signin_form():\n    return render_template('form.html')\n\n@app.route('/signin', methods=['POST'])\ndef signin():\n    username = request.form['username']\n    password = request.form['password']\n    if username=='admin' and password=='password':\n        return render_template('signin-ok.html', username=username)\n    return render_template('form.html', message='Bad username or password', username=username)\n\nif __name__ == '__main__':\n    app.run()\n```\n\n- form.html\n\n  ```html\n  <html>\n    <head>\n      <title>Please Sign In</title>\n    </head>\n    <body>\n      {% if message %}\n      <p style=\"color:red\">{{ message }}</p>\n      {% endif %}\n      <form action=\"/signin\" method=\"post\">\n        <legend>Please sign in:</legend>\n        <p>\n          <input\n            name=\"username\"\n            placeholder=\"Username\"\n            value=\"{{ username }}\"\n          />\n        </p>\n        <p><input name=\"password\" placeholder=\"Password\" type=\"password\" /></p>\n        <p><button type=\"submit\">Sign In</button></p>\n      </form>\n    </body>\n  </html>\n  ```\n\n### 处理\n\n- jinja2\n\n  > 在 Jinja2 模板中，用`{{ name }}`表示一个需要替换的变量。\n  >\n  > 用`{% ... %}`表示指令。\n  >\n  > 循环输出页码\n  >\n  > ```jinja2\n  > {% for i in page_list %}\n  >     <a href=\"/page/{{ i }}\">{{ i }}</a>\n  > {% endfor %}\n  > ```\n"}}]);