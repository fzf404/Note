(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{702:function(n,t){n.exports="\x3c!--\ntitle: 07-Hooks\nsort:\n--\x3e\n\n## 入门\n\n```jsx\nimport React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n  // 定义变量及它的修改者\n  const [globalStats, setGlobalStats] = useState({});\n  // 初始化时执行，第二参数的值改变时执行\n  useEffect(() => {\n  \tconst response = await fetch('...');\n  // ...\n\t}, [globalStats]);\n\n```\n\n## 路由 Hooks\n\n> 获得路由的参数\n\n```jsx\nimport {useParams,useHistory} from \"react-router-dom\";\n\nexport default function Detail() {\n\n  const params = useParams();\n  const history = useHistory();\n\n  // history显式传参\n  history.push('/api/somdata')\n  // 路由配置\n  <Route path=\"/api/:data\" component={api}></Route>\n  // 获得\n  data = params.data\n\n  // history 隐藏传参\n  history.push({\n    pathname: '/api',\n    state: {\n      \"data\": data\n    }\n  })\n  // 获得参数\n  const data = props.location.state.data\n\n  return <div>\n    <p>{params.Data}</p>\n    <Button onClick={ () => {\n      history.push('/')\n\t  }}>To Home</Button>\n  </div>\n```\n\n## 子组件调用\n\n```jsx\n// 子组件\nimport { useImperativeHandle, forwardRef } from 'react'\n\nfunction Child(props,ref) {\n  useImperativeHandle(ref, () => ({\n    getValue: () => {\n      return 'somthing'\n    }\n  }))\n\nexport default forwardRef(Child);\n\n// 父组件\nconst childRef = useRef();\n  const getCode = () => {\n    childRef.current.getValue()\n  }\n```\n"}}]);