(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{719:function(n,e){n.exports='\x3c!--\ntitle: 06-Vue路由\nsort:\n--\x3e\n\n## Vue-Router@4\n\n```js\nimport router from \'@/router/router\'\nrouter.push({ name: \'error\', params: { code: 200, msg: \'用户名不应为空\' }, query: { id: 404 } })\n\nimport { useRoute } from \'vue-router\'\nconst route = useRoute()\nconsole.log(route.params) // 隐示传参\nconsole.log(route.query) // 显示传参\n\n// template 使用\n$router.back() // 返回\n$route.params\n$route.query\n```\n\n## Vue-Router@3\n\n### 基础\n\n```js\nroute: 路由信息对象\n// 绝对路径\nthis.$route.path\n// 获得url传来的query\nthis.$route.query(.artid)\nthis.$route.params(.username)\n\nrouter: 访问路由实例\nthis.$router.push({ name: \'Login\' , params: { username: 123 }})\nthis.$router.push({ path: \'Info\' , query: { username: 123 }})\n// 其他方法\n<router-link to="{ name: \'404\'}">404</router-link>\n<router-link to="/404">404</router-link>\n// 动态绑定\n<router-link :to="url">404</router-link>\n```\n\n### 案例\n\n```js\nimport Vue from "vue";\nimport Router from "vue-router";\nimport store from "@/store";\nimport manageRoutes from "./module/manage";\nimport infoRoutes from "./module/info";\n\nVue.use(Router);\n\nconst routes = [\n  {\n    path: "/",\n    name: "Home",\n    component: () => import("../views/Index.vue"),\n  },\n  ...manageRoutes,\n  ...infoRoutes,\n  {\n    path: "*",\n    name: "404",\n    component: () => import("../views/404.vue"),\n  },\n];\nconst router = new Router({\n  routes,\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.auth) {\n    // 判断用户是否登录\n    if (store.state.userModule.token) {\n      next();\n    } else {\n      router.push({ name: "Home" });\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n```\n'}}]);