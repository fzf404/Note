(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{858:function(n,t){n.exports='\x3c!--\ntitle: 03-JavaIO\nsort:\n--\x3e\n\n## IO\n\n> 基础操作\n\n```java\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        File f = new File("./fzf");\n        // 获得路径\n        f.getPath();\n        f.getAbsolutePath();\n        f.getCanonicalPath();\n        // 判断类型\n        f.isFile();\n        f.isDirectory();\n        // 创建删除文件\n        file.createNewFile();\n        file.delete();\n        // 临时文件\n        File tf = File.createTempFile("tmp", ".txt"); // 提供临时文件的前缀和后缀\n        tf.deleteOnExit(); // JVM退出时自动删除\n    }\n}\n```\n\n### 遍历文件目录\n\n```java\nFile f = new File("/home");\nFile[] fs1 = f.listFiles(); // 列出所有文件和子目录\nprintFiles(fs1);\n```\n\n### Path 对象\n\n> 路径操作\n\n```java\nimport java.io.*;\nimport java.nio.file.*;\n\npublic class Main {\n  public static void main(String[] args) throws IOException {\n      // 构造一个Path对象\n    Path p1 = Paths.get(".", "data", "fzf404");\n    System.out.println(p1);\t\t\t\t\t// "./data/fzf404"\n    Path p2 = p1.toAbsolutePath();\n    System.out.println(p2);\t\t\t\t\t// "/opt/./data/fzf404"\n    Path p3 = p2.normalize();\n    System.out.println(p3);\t\t\t\t\t// "/opt/data/fzf404"\n    File f = p3.toFile(); \t\t\t\t\t// 转换为File对象\n    System.out.println(f);\t\t\t\t\t// "/opt/data/fzf404"\n    // 遍历PATH\n    for (Path p : Paths.get("data").toAbsolutePath()) {\n      // opt data\n      System.out.println("  " + p);\n      }\n  }\n}\n```\n\n### InputStream\n\n> 字节流读取`1bit`\n\n```java\npublic String readFile() throws IOException {\n  StringBuilder sb = new StringBuilder();\n  try (InputStream input = new FileInputStream(this.filename)) {\n    int n;\n    // StringBuilder对象\n    while ((n = input.read()) != -1) {\n      sb.append((char) n);\n    }\n  } // 自动finally并调用close()\n  return sb.toString();\n}\n```\n\n### OutputStream\n\n> 基本输出流\n\n```java\npublic void writeFile(String context) throws IOException {\n  try (OutputStream output = new FileOutputStream(this.filename)) {\n    output.write(context.getBytes("UTF-8")); // Hello\n  }\n}\n```\n\n## Reader/Writer\n\n> 字符流读取`2bit`\n\n```java\nimport java.nio.charset.*;\n\npublic String readFile2() throws IOException {\n  char[] buffer = new char[1000];\n  try (Reader reader = new FileReader(this.filename, StandardCharsets.UTF_\n      int n;\n      while ((n = reader.read(buffer)) != -1) {\n          System.out.println("read " + n + " chars.");\n      }\n  }\n```\n'}}]);