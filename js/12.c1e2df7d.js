(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{640:function(n,t){n.exports="\x3c!--\ntitle: 04-网络命令\nsort:\n--\x3e\n\n## 远程\n\n```bash\n# ssh远程连接\nssh user@ip\n# 使用私钥登录\nssh -i <path> user@ip\n# private key\nchmod 400 id_rsa\n\n# 互传文件\nscp -r <user>@<ip>:<source> <target> # 递归拷贝远程\n\n# ftp\nftp\n> open <ip> # 输入用户名和密码连接\n> close # 断开连接\n> ls # 全部目录\n> cd # 切换目录\n> get <file> # 下载文件\n> lcd <path> # 切换本地保存目录\n```\n\n## 信息\n\n```bash\n# 发送ICMP数据包\nping <url>\n\n# 本地到远程跳数\ntracerote\n\n# 网络信息\nip addr\n  # 路由表\n  ip route\n  # 网络设备\n  ip link\n\n# 全部套接字\nss\n  # 本地已占用端口\n  ss -tnlp\n\n# 所有打开的文件\nlsof\nlsof -i:8080 # 占用8080端口的文件\n```\n\n## 工具\n\n```bash\n# 图形化配网\nnmtui\n\n# 修改网络信息\n# ubuntu\nvim /etc/netplan/xxx.yaml\nnetplan apply # 生效\n\n# 抓取网络包\ntcpdump\n```\n\n## 请求\n\n> `wget`与`curl`\n\n```bash\n# 更善于发送请求\ncurl\n  -i <url> # 带请求头的响应\n  -d <param> # param格式信息\n  -X <method> # 请求方法\n  -H <header> # 请求头内容\n  -F <form> # form-data格式信息\n# 例子\n# param\ncurl -d 'id=12306' http://127.0.0.1:8080/search\n# form-data\ncurl -X POST -F 'user_name=admin' -F \"password=123456\" http://127.0.0.1:8080/login\n# Bearer\ncurl -X POST -H \"Authorization:Bearer eyJ..Token..rPw\" http://127.0.0.1:8080/info\n# Json\ncurl -X POST -H 'Content-Type:application/json' -d '{\"id\":\"12306\"}' http://127.0.0.1:8080/info\n# 通过Json文件\ncurl -X POST -H 'Content-Type:application/json' -d @file.json http://127.0.0.1:8080/info\n# 返回信息格式化\ncurl -d 'id=12306' http://127.0.0.1:8080/search | python -m json.tool\n\n# 更善于下载文件\nwget\n  -m <url> # 打包下载\n  -O <url> # 下载后改名\n# 例子\nwget -m <url> # 打包下载网站\nwget -O demo.zip <url> # 下载并重命名\n```\n"}}]);