(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{776:function(n,e){n.exports='\x3c!--\ntitle: 13-NodeMCU闪存\nsort:\n--\x3e\n\n## 文件访问\n\n```cpp\n#include <FS.h>\n\nString file_name = "/fzf-file/notes.txt";\n\nSPIFFS.format();    // 格式化SPIFFS\nSPIFFS.begin();\t\t// 启动SPIFFS\n\n// 写入文件\nFile dataFile = SPIFFS.open(file_name, "w");\ndataFile.println("Hello SPIFFS!");\ndataFile.close();\n\n// 读文件\nSPIFFS.exists(file_name);\nFile dataFile = SPIFFS.open(file_name, "r");\ndataFile.read();\t// 读取单个字符\ndataFile.close();\n\n// 追加\nFile dataFile = SPIFFS.open(file_name, "a");\ndataFile.println("This is Appended Info.");\ndataFile.close();\n\n// 读取目录\nDir dir = SPIFFS.openDir(folder_name);\nwhile (dir.next()) {  // dir.next()用于检查目录中是否还有“下一个文件”\n  Serial.println(dir.fileName()); // 输出文件名\n}\n\n// 删除文件\nSPIFFS.remove(file_name);\n\n// 闪存系统信息\nFSInfo fs_info;\nSPIFFS.info(fs_info);\n\n// 可用空间总和（单位：字节）\nSerial.print("totalBytes: ");\nSerial.print(fs_info.totalBytes);\nSerial.println(" Bytes");\n\n// 已用空间（单位：字节）\nSerial.print("usedBytes: ");\nSerial.print(fs_info.usedBytes);\nSerial.println(" Bytes");\n\n// 最大文件名字符限制（含路径和\'\\0\'）\nSerial.print("maxPathLength: ");\nSerial.println(fs_info.maxPathLength);\n\n// 最多允许打开文件数量\nSerial.print("maxOpenFiles: ");\nSerial.println(fs_info.maxOpenFiles);\n\n// 存储块大小\nSerial.print("blockSize: ");\nSerial.println(fs_info.blockSize);\n\n// 存储页大小\nSerial.print("pageSize: ");\nSerial.println(fs_info.pageSize);\n```\n\n## 文件上传\n\n[插件地址](https://github.com/esp8266/arduino-esp8266fs-plugin/releases)\n\n## 案例\n\n```cpp\n#include <Arduino.h>\n#include <ESP8266WebServer.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <FS.h>\n\nvoid handleRequest();\nString getContentType(String filename);\n\n// 对象初始化\nESP8266WiFiMulti wifiMulti;\nESP8266WebServer esp8266_server(80);\n\nvoid setup() {\n  Serial.begin(9600);\n\n  wifiMulti.addAP("Tenda_fzf", "18652798912");\n\n  // 判断是否连接\n  int i = 0;\n  while (wifiMulti.run() != WL_CONNECTED) { // 尝试进行wifi连接。\n    delay(1000);\n    Serial.print(i++);\n    Serial.print(\' \');\n  }\n\n  // 输出连接信息\n  Serial.println(\'\\n\');\n  Serial.print("Connected to ");\n  Serial.println(WiFi.SSID());\n  Serial.print("IP address:\\t");\n  Serial.println(WiFi.localIP());\n\n  // 文件系统\n  if (SPIFFS.begin()) { // 启动闪存文件系统\n    Serial.println("SPIFFS Started.");\n  } else {\n    Serial.println("SPIFFS Failed to Start.");\n  }\n\n  // 启动服务\n  esp8266_server.onNotFound(handleRequest);\n  esp8266_server.begin();\n  Serial.println("HTTP server started");\n}\n\nvoid loop() { esp8266_server.handleClient(); }\n\n// 处理请求\nvoid handleRequest() {\n  String webURL = esp8266_server.uri();\n  if (webURL.endsWith("/")) {\n    webURL = "/index.html";\n  }\n\n  String contentType = getContentType(webURL); // 获取文件类型\n\n  // 读取文件\n  if (SPIFFS.exists(webURL)) {\n    File file = SPIFFS.open(webURL, "r");\n    esp8266_server.streamFile(file, contentType);\n    file.close();\n  } else {\n    esp8266_server.send(404, "text/plain", "404 Not Found");\n  }\n}\n\n// 获取文件类型\nString getContentType(String filename) {\n  if (filename.endsWith(".htm"))\n    return "text/html";\n  else if (filename.endsWith(".html"))\n    return "text/html";\n  else if (filename.endsWith(".css"))\n    return "text/css";\n  else if (filename.endsWith(".js"))\n    return "application/javascript";\n  else if (filename.endsWith(".png"))\n    return "image/png";\n  else if (filename.endsWith(".gif"))\n    return "image/gif";\n  else if (filename.endsWith(".jpg"))\n    return "image/jpeg";\n  else if (filename.endsWith(".ico"))\n    return "image/x-icon";\n  else if (filename.endsWith(".xml"))\n    return "text/xml";\n  else if (filename.endsWith(".pdf"))\n    return "application/x-pdf";\n  else if (filename.endsWith(".zip"))\n    return "application/x-zip";\n  else if (filename.endsWith(".gz"))\n    return "application/x-gzip";\n  return "text/plain";\n}\n```\n'}}]);