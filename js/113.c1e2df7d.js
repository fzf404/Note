(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{741:function(n,e){n.exports='\x3c!--\ntitle: Nest入门\nsort:\n--\x3e\n\n### Controller\n\n```typescript\nimport { Controller, Get } from "@nestjs/common";\nimport { ApiOperation, ApiTags } from "@nestjs/swagger";\nimport { AppService } from "./app.service";\n\n@Controller()\n@ApiTags("app")\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: "测试",\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n```\n\n### MongoDB\n\n> [官方文档](https://nestjs.bootcss.com/techniques/mongo)\n\n```typescript\n// nest g mo db\n`/src/db/db.module.ts`;\nimport { Module } from "@nestjs/common";\nimport { MongooseModule } from "@nestjs/mongoose";\n\n@Module({\n  imports: [MongooseModule.forRoot("mongodb://localhost/nest")],\n})\nexport class DbModule {}\n\n// nest g interface user\n`/src/interface/user.interface.ts`;\nimport { Prop, Schema } from "@nestjs/mongoose";\nimport { ApiProperty } from "@nestjs/swagger";\n\n@Schema()\nexport class User extends Document {\n  @Prop()\n  @ApiProperty({\n    description: "用户手机号",\n    example: "13074291048",\n  })\n  readonly number: string;\n\n  @Prop()\n  @ApiProperty({\n    description: "用户密码",\n    example: "12345678",\n  })\n  readonly password: string;\n}\n\n// /src/db/schema/user.schema.ts\nimport { SchemaFactory } from "@nestjs/mongoose";\nimport { User } from "src/interface/user.interface";\n\n// 用户Schema\nexport const UserSchema = SchemaFactory.createForClass(User);\n```\n\n### 编写模块\n\n```typescript\n// nest g s user\n`/src/modules/user/user.services.ts`\n// nest g mo user\n`/src/modules/user/user.module.ts`\n// nest g co user\n`/src/modules/user/demo.controller.ts`\n\n// 密码加密\nnest g mi hashPassword\n// 响应接口\nnest g interface response\n\n// 守护 在中间件后阻止不正常的请求\nnest g gu auth\n`/src/guards/auth.guard.ts`\n\n// 装饰器\nnest g d r\n\n// 登录token\nnest g mo auth\nnest g service auth\nnest g co auth\n\n// 中间件注册\n\nexport class AuthModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(HashPasswordMiddleware)\n      .forRoutes(\'auth/regist\')\n      .apply(HashPasswordMiddleware)\n      .forRoutes(\'auth/alter\')\n  }\n}\n```\n'}}]);