(window.webpackJsonp=window.webpackJsonp||[]).push([[392],{1020:function(n,e){n.exports="\x3c!--\ntitle: Kuboard\nsort:\n--\x3e\n\n> [视频地址](https://www.bilibili.com/video/BV1mB4y117Hq)\n\n- 快速搭建高可用k8s集群\n- 一键创建 CephFS 存储类\n- 在集群中搭建开源项目\n\n## 准备\n\n1. 了解 Linux 以及 Docker 的基础知识\n2. 拥有两台不少于 2h4g 的 服务器 / 虚拟机\n\t- 推荐使用 Ubuntu 20.04 系统\n\t- 可购买按时间收费的云服务器，一小时只有几块钱\n\n| 地址       | 配置   | 存储        | 用途           |\n| ---------- | ------ | ----------- | -------------- |\n| 10.1.5.208 | 4h8g   | 128G        | 集群管理器     |\n| 10.1.5.210 | 8h16g  | 128G + 256G | Master 节点    |\n| 10.1.5.212 | 16h32g | 128G + 256G | 集群 Node 节点 |\n| 10.1.5.214 | 16h32g | 128G + 256G | 集群 Node 节点 |\n\n## 基础知识\n\n- 节点中都有什么？\n- 包含哪些内容？\n\t- `kube-apiserver`\n\t- `etcd`\n\t- `kube-scheduler`\n\t- `kube-controller`\n\n## 安装\n\n> 使用图形化界面安装 K8S 及 Kuboard\n\n```bash\n# 10.1.5.208\n\n# 0. 配置 ssh 登录\n\n# 使用 root 用户登录\nssh root@10.1.5.208\n# 生成 ssh 公私钥\nssh-keygen\n# 将公钥拷贝到允许列表中\ncat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n# 将公钥配置到其余服务器中\ncat ~/.ssh/id_rsa.pub | ssh root@10.1.5.210 'cat - >> ~/.ssh/authorized_keys'\ncat ~/.ssh/id_rsa.pub | ssh root@10.1.5.212 'cat - >> ~/.ssh/authorized_keys'\ncat ~/.ssh/id_rsa.pub | ssh root@10.1.5.214 'cat - >> ~/.ssh/authorized_keys'\n# 测试免密登录\nssh root@10.1.5.210 'echo success && exit'\nssh root@10.1.5.212 'echo success && exit'\nssh root@10.1.5.214 'echo success && exit'\n\n# 1. 安装 Docker\nbash <(curl -sSL https://cdn.jsdelivr.net/gh/SuperManito/LinuxMirrors@main/DockerInstallation.sh)\n\n# 2. 启动 Kuboard-Spray\nvim kuboard-spray.sh\ndocker run -d \\\n  --privileged \\\n  --restart=unless-stopped \\\n  --name=kuboard-spray \\\n  -p 31415:80/tcp \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v ~/kuboard-spray-data:/data \\\n  eipwork/kuboard-spray:latest-amd64\n\n# 访问 http://10.1.5.208:31415\n# 用户名 admin 密码 Kuboard123\n# 配置集群信息并安装\n\n# 4. 启动 Kuboard\nvim kuboard.sh\ndocker run -d \\\n  --restart=unless-stopped \\\n  --name=kuboard \\\n  -p 31416:80/tcp \\\n  -p 10081:10081/tcp \\\n  -e KUBOARD_ENDPOINT=\"http://10.1.5.208:31416\" \\\n  -e KUBOARD_AGENT_SERVER_TCP_PORT=\"10081\" \\\n  -v /root/kuboard-data:/data \\\n  eipwork/kuboard:v3\n\n# 访问 http://10.1.5.208:31416\n# 用户名 admin 密码 Kuboard123\n\n# 10.1.5.210\n\n# 查看 kubeconfig \ncat ~/.kube/config\n\n```\n## 文件系统\n\n> 搭建所有节点共用的存储系统\n\n```bash\n# 10.1.5.210\n\n# 1. 查看磁盘挂载\nlsblk -f\n\n# 2. 允许主节点调度资源\nkubectl taint nodes --all node-role.kubernetes.io/master-\n\n# 3. 部署 CephFS - Rook\nkubectl create -f https://kuboard.cn/statics/learning/ceph/rook-1.5.4/crds.yaml\nkubectl create -f https://kuboard.cn/statics/learning/ceph/rook-1.5.4/common.yaml\nkubectl create -f https://kuboard.cn/statics/learning/ceph/rook-1.5.4/operator.yaml\nkubectl create -f https://kuboard.cn/statics/learning/ceph/rook-1.5.4/cluster.yaml\n# 查看创建情况\nwatch kubectl get pods -n rook-ceph\n\n# 4. 创建文件存储服务\ncat > myfs.yaml <<EOF\napiVersion: ceph.rook.io/v1\nkind: CephFilesystem\nmetadata:\n  name: myfs\n  namespace: rook-ceph\nspec:\n  metadataPool:\n    replicated:\n      size: 3\n  dataPools:\n    - replicated:\n        size: 3\n  preservePoolsOnDelete: true\n  metadataServer:\n    activeCount: 1\n    activeStandby: true\nEOF\n\n# 执行\nkubectl create -f myfs.yaml\n\n# 5. 进入图形管理界面\n\n# - 进入 rook-ceph 名称空间中\n# - 点击 应用程序 -> 服务\n# - 进入 rook-ceph-mgr-dashboard 中\n# - 编辑 服务端口 选择 NodePort 更换为端口\n\n# 默认用户名 admin\n# 获得密码\nkubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath=\"{['data']['password']}\"|base64 --decode && echo\n\n# 访问链接\n\nhttps://10.1.5.208:31416\n\n```\n### 配置\n> 配置好 存储类 及 安装套件\n1. 创建存储类\n2. 安装资源层监控套件\n3. 安装存储卷浏览器\n\n## 部署\n> 在集群中部署点东西\n\n1. 创建名称空间\n2. 创建工作负载\n3. 创建容器\n\n### debian\n\n> [Docker Hub](https://hub.docker.com/_/debian)\n\n```bash\n# 启动命令\ntail -f /dev/null\n\n# 安装 nginx\napt-get upgrade\napt-get install nginx\n\n# 修改文件内容\nvim /var/www/html/index.nginx-debian.html\n\n# 发布服务 NodePort\n```\n\n### nginx\n\n> [Docker Hub](https://hub.docker.com/_/nginx)\n\n```bash\n# 部署 nginx\n# 创建存储类\n```\n\n### flarum\n\n> [中文论坛](https://discuss.flarum.org.cn)\n> [Github](https://github.com/mondediefr/docker-flarum)\n\n\n## 参考链接\n\n[Docker - 国内一键安装](https://gitee.com/SuperManito/LinuxMirrors/)\n\n[Kuboard-Spray - 图形化安装高可用集群](https://kuboard.cn/install/install-k8s.html)\n\n[Kuboard - 多集群管理界面](https://kuboard.cn/install/v3/install-built-in.html)\n\n[CephFS Rook - 快速安装 Ceph 集群](https://kuboard.cn/learning/k8s-intermediate/persistent/ceph/rook-config.html)\n\n[Debian Docker 镜像](https://hub.docker.com/_/debian)\n\n\n\n"}}]);