(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{669:function(n,t){n.exports="\x3c!--\ntitle: 13-Vidom可视化\nsort:\n--\x3e\n\n## 入门\n\n```python\n!python3 -m visdom.server -port 8081\nfrom visdom import Visdom\n\nviz = Visdom()\nx = torch.arange(-10,10,0.1)\ny = torch.sin(x)\n# 绘制正弦函数图像\nviz.line(y, x, win='Sin(x)', opts=dict(title='Sin() Image'))\n```\n\n## 运行\n\n```python\n!npm install -g localtunnel\nget_ipython().system_raw('python3 -m pip install visdom')\nget_ipython().system_raw('python3 -m visdom.server -port 8097 >> visdomlog.txt 2>&1 &')\nget_ipython().system_raw('lt --port 8097 >> url.txt 2>&1 &')\nimport time\ntime.sleep(5)\n!cat url.txt\nimport visdom\ntime.sleep(5)\nvis = visdom.Visdom(port='8097')\nprint(vis)\ntime.sleep(3)\nvis.text('Running')\n!cat visdomlog.txt\n```\n\n## MINIST\n\n```python\n# 展示文本 字符串/窗口id/其他参数\nviz.text('Hello Visdom', win='text', opts=dict(title='Text'))\n\n# loss可视化\nviz.line([0.], [0.], win='train_loss', opts=dict(title='Train Loss'))\n# 在batch中更新数据\nviz.line([loss.item()], [global_step], win='train_loss', update='append')\nglobal_step += 1\n\n# 多数据可视化\nviz.line([[0.0, 0.0]], [0.], win='test_info', opts=dict(title='test loss&acc.',\n                                                   legend=['Loss', 'Accu']))\n# 每个epoch\nviz.line([[test_loss, correct / len(test_loader.dataset)]],\n             [global_step], win='test', update='append')\n```\n"}}]);