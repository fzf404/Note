(window.webpackJsonp=window.webpackJsonp||[]).push([[398],{1026:function(n,e){n.exports="\x3c!--\ntitle: Nginx\nsort:\n--\x3e\n\n# Nginx 入门\n\n> [OpenResty](http://openresty.org/cn/)\n\n## docker\n\n```yml\n# docker-compose\nversion: '3.1'\nservices:\n  nginx:\n    restart: always\n    image: nginx\n    container_name: nginx\n    ports:\n      - 80:80\n    volumes:\n      - /opt/docker_nginx/conf.d:/etc/nginx/conf.d\n      - /usr/share/nginx/html\n```\n\n## 默认\n\n```bash\n# nginx替代品\npython3 -m http.server 80\n\n# 重新加载配置文件\nnginx -s reload\n\n# 返回特定值\nreturn 200 'ok';\n\n\n# 禁止IP访问\ndeny 39.106.106.202;\n```\n\n### 路径映射\n\n```nginx\n# = 匹配\nlocation = / {\n    # 精确匹配，不能带任何字符串\n}\n# 通用匹配\nlocation /xx {\n    # 匹配所有/xx/的路径\n}\n# 正则匹配\nlocation ~/xx {\n    # 匹配所有以/xx开头的路径\n}\nlocation ~* \\. (git|jpg|png)$ {\n    # 匹配大多数图片格式\n}\n\n# 全部加 / 就对了\n\n# 带/ 与 不带/\nlocation /test {\n    proxy_pass http://127.0.0.1:8080/;\n}\n# 访问: http://127.0.0.1/test/01.html\n# location - /\n# http://127.0.0.1:8080//01.html\n# location + /\n# http://127.0.0.1:8080/01.html\n\n\n# 带/ 与 不带/\nlocation /test/ {\n    proxy_pass http://127.0.0.1:8080/;\n}\n# 访问: http://127.0.0.1/test/01.html\n# proxy_pass - /\n# http://127.0.0.1:8080/test/01.html\n# proxy_pass + /\n# http://127.0.0.1:8080/01.html\n```\n\n## 实例\n\n### 反向代理\n\n```nginx\nlocation /test {\n    # 反向代理\n    proxy_pass http://group1/;\n}\n```\n\n### 文件服务器\n\n```nginx\nserver {\n    listen 80;\n    charset utf-8; # 防止中文文件名乱码\n\n    location /download {\n        alias /usr/share/nginx/static;  # 静态资源目录\n\n        autoindex on;    # 开启静态资源列目录，浏览目录权限\n        autoindex_exact_size off;   # on(默认)显示文件的确切大小，单位是byte；off显示文件大概大小，单位KB、MB、GB\n        autoindex_localtime off;   # off(默认)时显示的文件时间为GMT时间；on显示的文件时间为服务器时间\n    }\n}\n\n# clone本项目到服务器\ncd /opt\ngit clone https://github.com/QinLiStudio/download.git download-theme\n\n# 使用docker部署\ndocker run -d \\\n  --name fancyindex \\\n  -v /opt/download:/share \\\n  -v /opt/download-theme:/theme/Nginx-Fancyindex-Theme/ \\\n  -p 8000:80 \\\n  -e \"DISABLE_AUTH=true\" \\\n  --restart always \\\n  fraoustin/fancyindex\n```\n\n### 重定向\n\n```nginx\nserver {\n    listen 80;\n    server_name url;\n    # 强制 https\n    rewrite ^(.*)$ https://$host$1 permanent;\n\n    # 单域名重定向\n    if ($host = 'www.sherlocked93.club'){\n        return 301 https://www.sherlocked93.club$request_uri;\n    }\n\n    # 全局非 https 协议时重定向\n    if ($scheme != 'https') {\n        return 301 https://$server_name$request_uri;\n    }\n\n    # 或者全部重定向\n    return 301 https://$server_name$request_uri;\n}\n```\n\n### 负载均衡\n\n```nginx\n# 负载均衡 权重\nupstream group1{\n    ip_hash; # 同一客户端访问同一服务器\n    least_conn; # 动态分配给压力较小服务器\n    server 192.168.0.1:80 weight=2;\n    server 192.168.0.1:8080 weight=1;\n}\n\nserver{\n    location /test/ {\n        # 随机重定向到两个网页\n        proxy_pass http://group1/;\n  }\n}\n```\n\n### 关闭缓存\n\n```nginx\n# 过期时间\nexpires 10h;\n# 关闭\nexpires -1;\n\n# 缓存\nproxy_cache_path  /tmp/nginx/cache levels=1:2 inactive=2h keys_zone=mycache:10m max_size=10g;\n```\n\n### 请求头\n\n```nginx\n# 请求来源信息\nproxy_set_header Host $host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n# 支持socket连接\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection upgrade;\nproxy_set_header Accept-Encoding gzip;\n\n# 加速访问\ngzip on;\n```\n\n### 移动端适配\n\n```nginx\nserver {\n    listen 80;\n    server_name test.com;\n\n    location / {\n     root  /usr/local/app/pc; # pc 的 html 路径\n        if ($http_user_agent ~* '(Android|webOS|iPhone|iPod|BlackBerry)') {\n            root /usr/local/app/mobile; # mobile 的 html 路径\n        }\n        index index.html;\n    }\n}\n```\n\n### Https\n\n```nginx\nserver {\n  listen 80;\n  server_name cloud.fzf404.art;\n  rewrite ^(.*)$ https://$host$1 permanent;\n}\n\nserver {\n    listen 443 ssl;\n    server_name cloud.fzf404.art;\n\n    ssl_certificate /www/cert/cloud.fzf404.art/cert.pem;\n    ssl_certificate_key /www/cert/cloud.fzf404.art/key.pem;\n\n    location / {\n        proxy_pass http://127.0.0.1:5212;\n\n        proxy_set_header Host $host;\n        proxy_set_header Referer $http_referer;\n        proxy_set_header X-Real-Ip $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_redirect off;\n\n        client_max_body_size 20000m;\n    }\n    access_log  /www/logs/cloud.fzf404.art.log;\n    error_log  /www/logs/cloud.fzf404.art.error.log;\n}\n```\n"}}]);