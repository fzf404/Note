(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{961:function(n,o){n.exports="\x3c!--\ntitle: 09-插入代码\nsort:\n--\x3e\n\n> 改十六进制增加 MessageBox\n\n## 查找地址\n\n> Win32 程序，可调用 WinAPI，\n>\n> 首先查找 MessageBox 的地址\n\n### DTdebug\n\n1. 设置断点\n\n   `bp MessageBoxA`\n\n2. 进入断点\n\n   ![image-20201201211815930](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201211822.png)\n\n3. 地址`77D507EA`\n\n   ![image-20201201212140476](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201212140.png)\n\n4. 查看传入数据`6A 00 *3`\n\n   ![image-20201201213937319](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201213937.png)\n\n### PETool\n\n> 内存偏移与文件偏移相同\n>\n> 查找第一节表位置\n\n![image-20201201212446478](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201212446.png)\n\n> 查找`EntryPoint`与`ImageBase`\n>\n> 查看内存偏移与修改程序入口\n\n![image-20201201212902311](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201212902.png)\n\n## HexEditor\n\n> 开始修改\n\n### 节表间空白地址\n\n> 文件中大小与偏移\n>\n> `01A000 -> 01B000`之间空白区域添加\n\n### Call\n\n> `E8 <相对地址[4DWORD]>`\n>\n> <相对地址[4DWORD]>: `跳转代码地址 - 下一条命令地址`\n>\n> `77D507EA - E8所在地址+5`\n\n### JMP\n\n> 跳回程序入口地址\n>\n> `E9 <相对地址[4DWORD]>`\n>\n> <相对地址[4DWORD]>: `程序入口地址 - 下一条命令地址`\n>\n> `(ImageBase + EntryPoint) - E9+5`\n\n## 见证奇迹的时刻~\n\n> 改了这么多，最后会弹出来什么呢？\n\n![image-20201201214640822](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201201214640.png)\n\n**就是它，在程序运行前会弹出一个默认的 MessageBox**\n"}}]);