(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{715:function(n,t){n.exports='\x3c!--\ntitle: 02-Vue进阶\nsort:\n--\x3e\n\n## 判断与循环\n\n```vue\n<span v-if="isEditing">Update Product</span>\n<span v-else>Add Product</span>\n\n<script>\nexport default {\n  data: { isEditing: false },\n};\n<\/script>\n```\n\n## 双向绑定\n\n> 属性与 data 值同时改变\n\n```js\n<input v-model="name">\nv-model.lazy="name"\t\t// 惰性更新\nv-model.trim="name"\t\t// 去空格\nv-model.number="name"\t\t// 转换成数字\n```\n\n## 绑定\n\n> 绑定属性值\n\n```js\nv-bind:href="url"\n// 绑定a标签中的href至data\n:href="url"\n// 绑定class data中要定义isActive\n:class="{active: isActive}"\n// 实例 url要定义到data里\n<a :href="url" :class="{active: isActive}">Link</a>\n```\n\n## 事件\n\n```js\nv-on="{click: onClick, keyup: onKeyup}"\n// 绑定点击事件\n@click="onClick"\n// 保护刷新\n@submit.prevent="onSubmit()"\n// 键盘Enter抬起\n@keyup.enter="onKeyup">\n\n// 实例\n<button\n  v-on="{mouseenter: onEnter, mouseout: onOut, click: onClick}"\n  :class="{active: changeColor}"\n>点我</button>\n\nvar app = new Vue({\n  el: \'#app\',\n  data:{\n    changeColor: false,\n  },\n  // 定义事件\n  methods: {\n    onClick: () => {\n      console.log(\'click\')\n      app.changeColor=true\n    },\n    onEnter: () => {\n      console.log(\'mouse in\')\n    },\n    onOut: () => {\n      console.log(\'mouse out\')\n      app.changeColor=false\n    },\n  }\n});\n```\n\n## 计算属性\n\n```js\n<table border="1">\n  <thead>\n    <th>学科</th>\n    <th>分数</th>\n  </thead>\n  <tbody>\n    <tr>\n      <td>数学</td>\n      <td><input type="text" v-model.number="math"></td>\n    </tr>\n    <tr>\n      <td>英语</td>\n      <td><input type="text" v-model.number="english"></td>\n    </tr>\n    <tr>\n      <td>平均分</td>\n      <td>{{average}}</td>\n    </tr>\n    <tr>\n      <td>总分</td>\n      <td>{{sum}}</td>\n    </tr>\n  </tbody>\n</table>\n\ndata: {\n  math: 98,\n  english: 35,\n},\ncomputed: {\n  sum: function () {\n    return this.math + this.english\n  },\n  average: function () {\n    return (this.sum)/2\n  }\n}\n```\n'}}]);