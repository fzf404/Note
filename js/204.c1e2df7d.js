(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{832:function(n,t){n.exports='\x3c!--\ntitle: 05-数组与指针\nsort:\n--\x3e\n\n## C 的指针\n\n> 指针是一个值为内存地址的变量。\n>\n> `prt = &i //把i的地址赋给指针变量ptr`\n>\n> 间接运算符`*`找出指针指向的值\n\n### 声明一个指针\n\n```c\nint *pi;\n// int 表示指向int *表示指针 pi为变量名\n// 赋值\nint *i;\ni=(int*)404;\nprintf("%d",i);\n```\n\n### 函数间通信\n\n```c\nvoid interchange(int *, int *);\ninterchange(&x, &y)\t\t// 使用&传入xy的地址\n// 函数修改变量只后无需return\n```\n\n## 数组\n\n> 不允许把数组作为单元赋给另一个数组。\n>\n> arr[-1]被允许，向下占用空间、\n>\n> C99 后支持边长数组\n>\n> 多维数组可省略内部的{}\n\n#### 数组的大小\n\n`sizeof array / sizeof array[0]`\n\n### 指定初始化器\n\n`int arr[4] = {2, [0] = 1, [3] = 4, 3}`\n\n`{1,2,3,4}`\n\n### 数组名\n\n> 数组名是该数组首元素的地址\n>\n> `array = &array[0]`\n\n```c\nchar ch[] = {1,2,3};\nprintf("%p\\n",ch);\nprintf("%p\\n",&ch[1]);\n// 2a4fdec5\n// 2a4fdec6\n```\n\n### 数组指针\n\n```c\nchar ch[]={0,1,2,3,4};\n*ch == ch[0];\n*ch+2 == ch[2];\n// &ch == ch;\n\n```\n\n## 指针\n\n### 指针操作\n\n> 使用`const`防止数组被错误修改\n\n1. 赋值\n   ```c\n   array = array1;\n   array = &array[2];\n   i = *(array + 4)\n   ```\n2. 解引用`*`\n\n3. 取址`&`\n\n4. 指针转换\n\n   ```c\n   char data[] =\n   {\n       0x00,0x02,0x03,0x04,0x05,0x06,0x07\n   };\n   // 将char* 转为 int*\n   int *p = (int*)&data;\n   ```\n\n5. 取值\n\n   ```c\n   struct data\n   {\n       int a;\n       int b;\n       int c;\n   };\n\n   struct data s;\n\n   s.a=1;\n   s.b=2;\n   s.c=3;\n\n   struct data* px = &s;\n\n   px->a = 10;\n\n   printf("%d",px->a);\n   ```\n\n6. const\n   ```c\n   int i = 404;\n   int * ptr;\n   const int * ptr = &i;\n   // ptr可修改, i可修改, 不能通过*ptr=400 来修改i\n   int const * ptr = &i;\n   // 同上\n   int * const ptr;\n   // ptr 不可以指向别的地址\n   ```\n\n### 引用\n\n> 变量的一个别名\n\n```c\nint a;\nint& p = a;\nint& func(int& a){}\n```\n\n### 多维数组\n\n```c\narray+2     // 二维数组的第三个一维数组\n*(array+2)  // 二维数组的第三个一维数组的第一个元素的地址\n*(array+2) + 1    // 二维数组的...第二个元素的地址\n*(*arry+2) + 1)   // ...元素的值\n```\n\n### 复合自面量\n\n`int *i = (int [3]) { 1,2,3 }`\n\n## 结构体\n\n> 按照数据从大到小书写\n\n```c\n#pragma pack(4) // 设置对齐字节数\n// 默认为8\nstruct s1\n{\n    char name[40];\n    bool sex;\n    unsigned char age;\n};\n#pragma pack()\n```\n\n### 结构体指针\n\n```c\nstruct student\n{\n\tchar name[40];\n\tint age;\n\tint score;\n};\n// 结构体数组\nstruct student arr[3]=\n{\n\t{"张三",18,80 },\n\t{"李四",19,60 },\n\t{"王五",20,70 }\n};\n// 结构体指针\nstruct student * p = &arr[0];\np->score=75;\nprintf("%d",arr[0].score);\n```\n'}}]);