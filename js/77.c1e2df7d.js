(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{705:function(n,e){n.exports='\x3c!--\ntitle: 10-Redux\nsort:\n--\x3e\n\n> 状态容器\n>\n> `yarn add redux`\n>\n> chrome 插件`Redux Dev Tools`\n\n## 入门\n\n```react\nimport { createStore } from \'redux\'\nimport reducer from \'./reducer\'\n\nfunction reducer(state){\n    return {\n        count: 42\n    }\n}\n\n// 创建store\nconst store = createStore(reducer)\n\nexport default store\n```\n\n## 使用\n\n1. 建立 store 文件夹：`store/index.js`\n\n```jsx\nimport { createStore } from "redux";\nimport reducer from "./reducer";\n\n// 创建store\nconst store = createStore(reducer);\n\nexport default store;\n```\n\n2. `store/reducer.js`\n\n```jsx\n// 数据\nconst defaultState = {\n  inputValue: "something",\n};\n\n// reducer处理函数\n// state为数据，action为修改时传入的参数\nconst reducer = (state = defaultState, action = {}) => {\n  // 判断修改时传入的type\n  if (action.type === "changeInput") {\n    // 深拷贝\n    let newState = JSON.parse(JSON.stringify(state));\n    // 修改值\n    newState.inputValue = action.value;\n    return newState;\n  }\n  return state;\n};\n\nexport default reducer;\n```\n\n3. 读取修改数据\n\n```jsx\n// import store from \'./store/index\'\nimport store from "./store";\n\n// store.getState()获取数据\nconst [state, setState] = useState(store.getState());\n\n// store修改时触发函数\nlet storeChange = () => {\n  setState(store.getState());\n};\nstore.subscribe(storeChange);\n\n// 触发修改\nconst changeInputValue = (e) => {\n  // 创建action\n  const action = {\n    type: "changeInput",\n    value: e.target.value,\n  };\n  // 发送action\n  store.dispatch(action);\n};\n\n// 组件\nreturn <input value={state.inputValue} onChange={changeInputValue} />;\n```\n'}}]);