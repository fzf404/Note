(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{746:function(t,n){t.exports='\x3c!--\ntitle: 03-应用\nsort:\n--\x3e\n\n# 单片机应用\n\n## 电子琴\n\n```C\n#include "reg51.h"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit beep=P0^5;\n\nvoid delay(u16 i)\n{\n\twhile(i--);\n}\n\nu8 keypros()\n{\n\twhile(1)\n\t{\n\t\tif(P1<0xff)\n\t\t{\n\t\t\tdelay(1000);\n\t\t\tswitch(P1)\n\t\t\t{\n\t\t\t\tcase(0x7f):return 110;break;\n\t\t\t\tcase(0xbf):return 120;break;\n\t\t\t\tcase(0xdf):return 140;break;\n\t\t\t\tcase(0xef):return 160;break;\n\t\t\t\tcase(0xf7):return 50;break;\n\t\t\t\tcase(0xfb):return 60;break;\n\t\t\t\tcase(0xfd):return 70;break;\n\t\t\t\tcase(0xfe):return 90;break;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nvoid be(u8 k)\n{\n\tint i;\n\tfor(i=0;i<=(180-k)*5;i++)\n\t{\n\t\tbeep = ~beep;\n\t\tdelay(k);\n\t}\n}\n\nvoid main()\n{\n\twhile(1)\n\t{\n\t\tbe(keypros());\n;\t}\n}\n```\n\n## 交通灯\n\n```c\n#include "reg51.h"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit LSA = P2 ^ 2;\nsbit LSB = P2 ^ 3;\nsbit LSC = P2 ^ 4;\n\n#define GPIO_DIG P0\n#define GPIO_TRAFFIC P1\n\nsbit RED10 = P1 ^ 0;\nsbit GREEN10 = P1 ^ 1;\nsbit RED11 = P1 ^ 2;\nsbit YELLOW11 = P1 ^ 3;\nsbit GREEN11 = P1 ^ 4;\n\nsbit RED00 = P3 ^ 0;\nsbit GREEN00 = P3 ^ 1;\nsbit RED01 = P1 ^ 5;\nsbit YELLOW01 = P1 ^ 6;\nsbit GREEN01 = P1 ^ 7;\n\nu8 code smgduan[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f,\n\t\t\t\t\t 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};\n\nu8 seconds = 0;\nu8 DisplayData[8];\n\nvoid delay(u16 i)\n{\n\twhile (i--)\n\t\t;\n}\n\nvoid DigDisplay()\n{\n\tu8 i;\n\tfor (i = 0; i < 8; i++)\n\t{\n\t\tswitch (i)\n\t\t{\n\t\tcase 0:\n\t\t\tLSA = 0;\n\t\t\tLSB = 0;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tLSA = 1;\n\t\t\tLSB = 0;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tLSA = 0;\n\t\t\tLSB = 1;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tLSA = 1;\n\t\t\tLSB = 1;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tLSA = 0;\n\t\t\tLSB = 0;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tLSA = 1;\n\t\t\tLSB = 0;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tLSA = 0;\n\t\t\tLSB = 1;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tLSA = 1;\n\t\t\tLSB = 1;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\t}\n\t\tGPIO_DIG = DisplayData[i];\n\t\tdelay(100);\n\t\tGPIO_DIG = 0x00; // 清零\n\t}\n}\n\nvoid Timer0Init()\n{\n\tTMOD |= 0x01;\n\tTH0 = 0xFC;\n\tTL0 = 0X18;\n\tET0 = 1; // 打开中断\n\tEA = 1;\t // 打开总中断\n\tTR0 = 1;\n}\n\nvoid main()\n{\n\tseconds = 1;\n\tTimer0Init();\n\twhile (1)\n\t{\n\t\tif (seconds == 70)\n\t\t{\n\t\t\tseconds = 1;\n\t\t}\n\t\tif (seconds < 30)\n\t\t{\n\t\t\tDisplayData[0] = 0x00;\n\t\t\tDisplayData[1] = 0x00;\n\t\t\tDisplayData[2] = smgduan[(30 - seconds) / 10];\n\t\t\tDisplayData[3] = smgduan[(30 - seconds) % 10];\n\n\t\t\tDisplayData[4] = 0x00;\n\t\t\tDisplayData[5] = 0x00;\n\t\t\tDisplayData[6] = DisplayData[2];\n\t\t\tDisplayData[7] = DisplayData[3];\n\t\t\tDigDisplay();\n\n\t\t\tGPIO_TRAFFIC = 0xff;\n\t\t\tRED00 = 1;\n\t\t\tGREEN00 = 1;\n\n\t\t\tGREEN10 = 0;\n\t\t\tGREEN11 = 0;\n\n\t\t\tRED00 = 0;\n\t\t\tRED01 = 0;\n\t\t}\n\t\telse if (seconds < 35)\n\t\t{\n\t\t\tDisplayData[0] = 0x00;\n\t\t\tDisplayData[1] = 0x00;\n\t\t\tDisplayData[2] = smgduan[(35 - seconds) / 10];\n\t\t\tDisplayData[3] = smgduan[(35 - seconds) % 10];\n\n\t\t\tDisplayData[4] = 0x00;\n\t\t\tDisplayData[5] = 0x00;\n\t\t\tDisplayData[6] = DisplayData[2];\n\t\t\tDisplayData[7] = DisplayData[3];\n\t\t\tDigDisplay();\n\n\t\t\tGPIO_TRAFFIC = 0xff;\n\t\t\tRED00 = 1;\n\t\t\tGREEN00 = 1;\n\n\t\t\tRED10 = 0;\n\t\t\tYELLOW11 = 0;\n\n\t\t\tRED00 = 0;\n\t\t\tRED01 = 0;\n\t\t}\n\t\telse if (seconds < 65)\n\t\t{\n\t\t\tDisplayData[0] = 0x00;\n\t\t\tDisplayData[1] = 0x00;\n\t\t\tDisplayData[2] = smgduan[(65 - seconds) / 10];\n\t\t\tDisplayData[3] = smgduan[(65 - seconds) % 10];\n\n\t\t\tDisplayData[4] = 0x00;\n\t\t\tDisplayData[5] = 0x00;\n\t\t\tDisplayData[6] = DisplayData[2];\n\t\t\tDisplayData[7] = DisplayData[3];\n\t\t\tDigDisplay();\n\n\t\t\tGPIO_TRAFFIC = 0xff;\n\t\t\tRED00 = 1;\n\t\t\tGREEN00 = 1;\n\n\t\t\tRED10 = 0;\n\t\t\tRED11 = 0;\n\n\t\t\tGREEN00 = 0;\n\t\t\tGREEN01 = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDisplayData[0] = 0x00;\n\t\t\tDisplayData[1] = 0x00;\n\t\t\tDisplayData[2] = smgduan[(70 - seconds) / 10];\n\t\t\tDisplayData[3] = smgduan[(70 - seconds) % 10];\n\n\t\t\tDisplayData[4] = 0x00;\n\t\t\tDisplayData[5] = 0x00;\n\t\t\tDisplayData[6] = DisplayData[2];\n\t\t\tDisplayData[7] = DisplayData[3];\n\t\t\tDigDisplay();\n\n\t\t\tGPIO_TRAFFIC = 0xff;\n\t\t\tRED00 = 1;\n\t\t\tGREEN00 = 1;\n\n\t\t\tRED10 = 0;\n\t\t\tRED11 = 0;\n\n\t\t\tYELLOW01 = 0;\n\t\t\tRED01 = 0;\n\t\t}\n\t}\n}\n\nvoid Time0() interrupt 1\n{\n\tstatic u16 i;\n\tTH0 = 0xFC;\n\tTL0 = 0X18;\n\ti++;\n\tif (i == 1000)\n\t{\n\t\ti = 0;\n\t\tseconds++;\n\t}\n}\n```\n'}}]);