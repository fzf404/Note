(window.webpackJsonp=window.webpackJsonp||[]).push([[339],{967:function(n,t){n.exports="\x3c!--\ntitle: 02-PythonHack\nsort:\n--\x3e\n\n## 0x1 使用类\n\n```python\nimport os\n\nclass Domain(object):\n    def __init__(self, domain, port, protocol):\n        self.domain = domain\n        self.port = port\n        self.protocol = protocol\n\n    def url(self):\n        if self.protocol == 'http':\n            return 'http://' + self.domain + ':' + self.port\n        if self.protocol == 'https':\n            return 'https://' + self.domain + ':' + self.port\n\n    def lookup(self):\n        os.system(\"start \" + self.url())\n\ndomain = Domain('www.freebuf.com', '80', 'http')\ndomain.lookup()\n\n```\n\n## 0x2 接收命令行参数\n\n```python\nimport sys\n\nscript = sys.argv[0]\nip = sys.argv[1]\nport = sys.argv[2]\nprint('[+] The script name is ' + script)\nprint('[+] The ip is ' + ip + ':' + port)\n```\n\n## 0x3 使用`socket`写一个端口扫描\n\n```python\nimport socket\nports = [21, 22, 53, 445, 80, 443, 3389, 8080]\nhosts = ['127.0.0.1', '10.10.10.10', '192.168.1.1']\nfor host in hosts:\n    for port in ports:\n        try:\n            s = socket.socket()\n            print(\"[+] Attempting to connect to \" + host + \":\" + str(port))\n            s.connect((host, port))\n            s.send('absdkfbsdafblabldsfdbfhasdflbf /n')\n            banner = s.recv(1024)\n            if banner:\n                print(\"[+] \" + host + \":\" + str(port) + \" open: \\n\" + banner)\n            s.close()\n        except:\n            pass\n```\n\n## 0x4 Fuzzer\n\n> fuzz 是利用暴力实现对目标程序的测试\n\n```python\nimport sys, socket\nfrom time import sleep\n\n# set first argument given at CLI to 'target' variable\ntarget = sys.argv[1]\n# create string of 50 A's '\\x41'\n#生成50个A，41是‘A’的16进制ascii码\nbuff = '\\x41'*50\n#  每次向目标IP地址的21端口发送50个‘A'\n# loop through sending in a buffer with an increasing length by 50 A's\nwhile True:\n  # The \"try - except\" catches the programs error and takes our defined action\n  try:\n    # Make a connection to target system on TCP/21\n    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    s.settimeout(2)\n    s.connect((target,21))\n    s.recv(1024)\n\n    print \"Sending buffer with length: \"+str(len(buff))\n    # Send in string 'USER' + the string 'buff'\n    s.send(\"USER \"+buff+\"\\r\\n\")\n    s.close()\n    sleep(1)\n    # Increase the buff string by 50 A's and then the loop continues\n    buff = buff + '\\x41'*50\n\n  except: # If we fail to connect to the server, we assume its crashed and print the statement below\n    print \"[+] Crash occured with buffer length: \"+str(len(buff)-50)\n    sys.exit()\n```\n\n## 0x5 Web Requests\n\n1. 首先创建一个`index.html`\n\n2. 在终端下输入`python -m http.server`\n\n3. 开始写程序\n\n   ```python\n   from urllib import request\n   url = \"http://127.0.0.1:8000\"\n   r = request.urlopen(url)\n   print(r.readlines())\n   print(r.getheaders())\n   ```\n\n4. 使用 bs4 解析\n\n   ```python\n   parse = BeautifulSoup(r.read(), features='html.parser')\n   print(parse.title)\n   print(parsed.find_all('h2'))\n   ```\n"}}]);