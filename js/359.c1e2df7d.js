(window.webpackJsonp=window.webpackJsonp||[]).push([[359],{987:function(t,n){t.exports='\x3c!--\ntitle: Git\nsort:\n--\x3e\n\n# Git 教程\n\n## 问题\n\n```bash\n# ssl error\ngit config --global http.sslBackend "openssl"\n\n# name & email\ngit config --global user.name "fzf404"\ngit config --global user.email me@fzf404.art\n\n# WARNING: UNPROTECTED PRIVATE KEY FILE!\nchmod 600 ~/.ssh/*\n\n# 本地与远程冲突解决\ngit stash\ngit pull\ngit stash pop\n```\n\n## 常用\n\n```bash\n# clone\ngit clone <remote_url>\n# 克隆链接的第三方仓库\ngit clone --recurse-submodules <remote_url>\n# 或\ngit submodule update --init --recursive\n\n# 代理\ngit config --global http.proxy http://127.0.0.1:10808\ngit config --global https.proxy http://127.0.0.1:10808\ngit config --global https.proxy socks5://127.0.0.1:10808\ngit config --global --unset http.proxy\n\n# tag 操作\nset tag v0.4.0\ngit tag -d $tag # 删除标签\ngit push --delete origin $tag # 删除远程 tag\n\ngit tag $tag # 新增标签\ngit push --tags # 推送 tag 到远程\n\n# 更新远程地址\ngit remote remove origin\ngit remote add origin <remote_url>\n\n# 强制覆盖\ngit fetch --all\ngit reset --hard origin/master\n\n# 清除某次提交前的全部提交\necho \'🔥 主页v2.0\' | git commit-tree c6b4418^{tree}\n> fb27a3e558d45bf7725dbe3dd6a204ff74454472\ngit rebase --onto e4a0dc c6b4418\t\t# Hash值前六位 目标Hash值\n\n# 从所有提交中删除某个文件\ngit filter-branch --index-filter \\\n    \'git rm -rf --cached --ignore-unmatch xxx.xx\' HEAD\n# 推荐的做法\nbrew install git-filter-repo\ngit filter-repo --invert-paths --path \'xxx.xx\' --use-base-name\n\n# 修改提交信息\ngit log --oneline -5 # 最近5次提交信息\ngit rebase -i ce53go # 修改特定信息\ngit rebase -i HEAD~5 # 修改近5次的提交信息\n\ngit push -f # 强制推送\n\n# 修改日期\nhttps://github.com/PotatoLabs/git-redate\n# 修改近4次提交记录\ngit redate -c 4\n\n# 修改初始提交时间\ngit filter-branch --env-filter \\\n"if test \\$GIT_COMMIT = \'448827e9ef01bb245ccd3939bfbddc2681c6d9c8\'\nthen\n    export GIT_AUTHOR_DATE=\'Sun May 7 02:23:03 2017 +0000\'\n    export GIT_COMMITTER_DATE=\'Sun May 7 02:23:03 2017 +0000\'\nfi" && rm -fr "$(git rev-parse --git-dir)/refs/original/"\n\n```\n\n## SSH\n\n```bash\n# 生成 ssh 密钥\nssh-keygen\n\n# 更新ssh\ngit remote rm origin\ngit push --set-upstream origin master\ngit remote add origin git@github.com:fzf404/Tech_Note.git\n```\n\n## 更多命令\n\n```bash\ngit init\t\t# 初始化git仓库\necho 123456 > 1.txt\t# 写入东西\ngit add .\\1.txt\t\t# 添加至缓冲区\ngit commit -m "添加了1.txt"\t# 添加至归档区\n\ngit status\t\t# 显示当前状态\ngit add . \t\t# 添加所有文件\ngit commit -m "two commit"\ngit log\t\t\t# 查看过去操作\ngit reflog\t\t# 查看操作记录\n\ngit reset <>\t# 归档区回滚\n\t--mixed\t\t# (默认)回滚归档区与缓冲区\n\t--hard\t\t# 回滚三个区\n\t--soft\t\t# 回滚归档去\ngit reset HEAD <file>\t# 撤销add文件\ngit checkout --<file>\t# 撤销工作区的修改\n\ngit revert <>\t# 抹除某次提交\n\ngit remote -v\t# 查看服务端地址\ngit remote remove origin\t# 删除重新添加\ngit remote add origin git@github.com:fzf404/gitdemo.git\ngit branch --set-upstream-to=origin/master master\n\n# 浅拷贝\ngit clone xxx --depth=1\n```\n\n### 操作\n\n```bash\n# 清理旧的提交\ngit checkout --orphan latest_branch\n# 所有文件加到暂存区\ngit add -A\ngit commit -am "Clean old Commit"\n# 强制提交\ngit push -f origin master\n\n# Github Gitee 同步更新\ngit remote rm origin\n# 关联 github 与 gitee\ngit remote add github git@github.com:\ngit remote add gitee git@gitee.com:\n# 检查\ngit remote -v\n# 上传\ngit push github master\ngit push gitee master\n```\n\n### 分支\n\n```bash\ngit branch -v\t# 查看当前分支\ngit checkout -b b1\t# 新建分支并切换\ngit checkout --orphan b2\t# 新建无提交分支\ngit branch -D master\t# 删掉旧分支\ngit branch -m master\t# 新分支改名\n# 合并分支\ngit checkout master\t# 回到主分支\ngit merge b1\t\t# 合并但不删除\n# 遇到冲突可将master合并并修改冲突\ngit pull\t\t\t# 拉取远端仓库的最新版本并合并\n# 相当于如下指令的结合\n# fetch/merge\n\n# 新建空分支并切换\n```\n\n### 忽略文件\n\n> 以斜杠`/`开头表示目录；\n> 以星号`*`通配多个字符；\n> 以问号`?`通配单个字符；\n> 以方括号`[]`包含单个字符的匹配列表；\n> 以叹号`!`表示不忽略(跟踪)匹配到的文件或目录；\n\n## 原理\n\n```bash\n# 查看数据库\ntree .git/objects\n\n# 读取文件类型\ngit cat-file -t 58c9\nblob # 缓冲区\ntree # 归档区 - 目录结构快照\ncommit # 归档区 - 提交信息\n\n# 读取文件具体内容\ngit cat-file -p 58c9\n\n# 分支信息\ncat .git/HEAD\ncat .git/refs/heads/master\n\n# 修改配置文件\nvim .\\.git\\config\n```\n\n'}}]);