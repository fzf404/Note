(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{825:function(n,t){n.exports='\x3c!--\ntitle: 02-CSharp基础语法\nsort:\n--\x3e\n\n## 数据类型\n\n> 与 c++差不多\n\n- sizeof\n\n  `Console.WriteLine("Size of int: {0}", sizeof(int));`\n\n### 引用类型\n\n#### 对象类型\n\n```c#\n// Object是c#的基类,可以转换后分配给任何类型\nint val=404;\nobject objtest = val;\nobjtest = 4042;\nConsole.WriteLine(objtest);\n// 4042\n```\n\n#### 动态类型`dynamic`\n\n> 对象类型的变量编译时进行类型检查,动态类型在运行时检查.\n\n```c#\ndynamic vars="dynamic test!";\nConsole.WriteLine(vars);\n```\n\n#### 字符串类型\n\n```c#\nString str = "hello\\tfzf!";\nString stra = @"hello\n\t\t\t\t\\tfzf";\nConsole.WriteLine("Str: {0}\\n@Str: {1}", str, stra);\n// Str: hello\tfzf!\n// @Str: hello\\\n//\t\t\t\t\\tfzf\n```\n\n#### 指针类型\n\n> 与 c 中的指针具有相同功能\n\n### 类型转换\n\n```c#\ndouble d = 3.1415;\nint i;\n// 转换\ni = (int)d;\nstring str = d.ToString();\n```\n\n## 接收用户输入\n\n```c#\nnum = Convert.ToInt32(Console.ReadLine());\nConsole.WriteLine("Input num is: {0}", num);\n```\n'}}]);