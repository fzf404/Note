(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{869:function(n,t){n.exports='\x3c!--\ntitle: 02-Android基础\nsort:\n--\x3e\n\n# Android 基础\n\n## 四大组件\n\n- 活动(Activity)\n\n  > 活动是程序的根本\n\n- 服务(Service)\n\n  > 后台提供服务，无界面，与 Activity 同级\n\n- 广播接收器(BroadcastReceiver)\n\n  > 程序间信息传输\n\n- 内容提供者(ContentProvider)\n\n  > 访问第三方应用的数据\n\n## layout\n\n> 定义应用中的界面结构\n\n### 结构\n\n> `View`绘制可查看并进行交互的内容\n>\n> `ViewGroup`是不可见容器\n\n![image-20201028200605153](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20201028200612.png)\n\n> `View`对象一般为小部件，例如`Buttom`或`TextView`\n\n### 声明布局\n\n> 在 XML 中声明界面元素\n>\n> 每个布局文件只能包含一个根元素，必须是视图对象或`ViewGroup`\n\n```xml\n<?xml version="1.0" encoding="utf-8"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    xmlns:tools="http://schemas.android.com/tools"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    tools:context=".MainActivity">\n\n    <TextView\n        android:layout_width="wrap_content"\n        android:layout_height="wrap_content"\n        android:text="Hello World!"\n        app:layout_constraintBottom_toBottomOf="parent"\n        app:layout_constraintLeft_toLeftOf="parent"\n        app:layout_constraintRight_toRightOf="parent"\n        app:layout_constraintTop_toTopOf="parent" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n```\n\n> XML 文件将会编译成`View`资源，\n>\n> 在`MainActivity.onCreate()`回调内，\n>\n> 调用`setContentView()`\n>\n> 并以`R.layout.*layout_file_name`形式传递代码布局。\n\n```java\npackage com.example.helloworld;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}\n```\n\n### 属性\n\n```xml\n<TextView\n    android:id="@+id/tv"\n\tandroid:layout_width="wrap_content"\n\tandroid:layout_height="wrap_content"\n\tandroid:text="Hello World!"\n\tandroid:textSize="24sp" />\n```\n\n> `@id`：对 View 对象进行唯一标识\n>\n> `@+id`在 R.java 文件新增 id 名称，`@id`直接引用已存在的 id 资源\n>\n> 在`MainActivity.java`调用：\n>\n> `TextView textView = (TextView) findViewById(R.id.tv)`\n'}}]);