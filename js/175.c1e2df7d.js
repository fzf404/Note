(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{803:function(n,o){n.exports="\x3c!--\ntitle: 01-软件使用\nsort:\n--\x3e\n\n## DosBox\n\n> `DOSBox 0.74-3 Options.bat`\n>\n> 设置环境变量\n\n```shell\n[autoexec]\n# Lines in this section will be run at startup.\n# You can put your MOUNT lines here.\nmount X D:\\App\\nasm-215\nset PATH=%PATH%;X:\\\nmount C D:\\Work\\WorkSpace\\Mini\nC:\ndir\n```\n\n> 测试程序\n\n```assembly\n%define   com              ; 注释用于MBR，不注释用于COM调试\n%ifdef    com\norgaddr   equ   100h       ;用于COM调试的设置\n%else\norgaddr   equ   7c00h      ;用于MBR启动的设置\n%endif\n\n\njmp start\n\nwelcome db 'Welcome To fzfOS','$'\n\nstart:\n    mov ax, cs\n    add ax, orgaddr/10h\n    mov ds, ax\n    mov es, ax\n\n    mov  si, welcome\n    call printstr\n\n    %ifdef    com           ;如果是.COM调试，需要调用DOS返回中断\n    mov ah, c4ch\n    int 21h\n    %endif                  ;.COM程序将在此顺利返回Dos系统\n\n    jmp $                   ;如果是MBR启动，将在此停止运行\n\n\nprintstr:                  ;显示指定的字符串, 以'$'为结束标记\n      mov al,[si]\n      cmp al,'$'\n      je disover\n      mov ah,0eh\n      int 10h\n      inc si\n      jmp printstr\ndisover:\n      ret\n\ntimes 510-($-$$) db 0\n      db 0x55,0xaa\n```\n\n> 编译调试\n\n```shell\nnasm demo.asm -o demo.com\n# 运行\ndemo.com\n# 调试\ndebug demo.com\n# MBR编译\nnasm 1-DosBox.asm -o 1-DosBox.bin\n```\n\n## Debug\n\n| 命令     | 例子                                     | 用途               |\n| -------- | ---------------------------------------- | ------------------ |\n| D-显示   | -D 100 L 200【100h-200h 内容】           | 显示内存的内容     |\n| E-修改   | -E DS:100 FF 【100h 改成 FF】            | 修改内存           |\n| F-填充   | -F100 110 FF 【100-110 填充 FF】         | 填充内存           |\n| R-寄存器 | -R AX                                    | 寄存器的值         |\n| A-输入   | -A200 -> mov ax,cs                       | 输入汇编指令进内存 |\n| U-反汇编 | -U100 120                                | 显示命令           |\n| G-运行   | -G=100 10F 120 【100 运行 10F/120 断点】 | 运行直到断点       |\n| T-跟踪   | -T                                       | 单步调用           |\n| P-继续   | -P                                       | CALL 直接运行      |\n| Q-退出   | -Q                                       | 不保存             |\n| L-装载   | -N <path> -L                             | 装载 N 指定的文件  |\n| W-写盘   | -N <path> -L                             | 写入 N 指定的文件  |\n"}}]);