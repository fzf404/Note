(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{689:function(n,t){n.exports="\x3c!--\ntitle: 42-文件操作\nsort:\n--\x3e\n\n## 文件列表\n\n```js\nconst fs = require('fs');\nconst path = require('path');\n\nconst pathName = './';  // 需遍历的文件夹路径\nconst jsonPath = './files.json';  // 生成 json 的文件路径\n\nfunction readFileList(dir, record = true) {\n  let filesList = []\n  const files = fs.readdirSync(dir);\n  files.forEach((item, index) => {\n    let fullPath = path.join(dir, item);\n    let stat = fs.statSync(fullPath);\n    if (stat.isDirectory()) {\n      filesList.push(readFileList(path.join(dir, item)));  // 递归读取文件\n    } else if (record && item.endsWith('.md')) {\n      filesList.push('/' + fullPath.replace(function readFileList(dir, record = true) {\n  let filesList = []\n  const files = fs.readdirSync(dir);\n  files.forEach((item, index) => {\n    let fullPath = path.join(dir, item);\n    let stat = fs.statSync(fullPath);\n    if (stat.isDirectory()) {\n      filesList.push(readFileList(path.join(dir, item)));  // 递归读取文件\n    } else if (record && item.endsWith('.md')) {\n      filesList.push('/' + fullPath.replace(/\\\\/g, '/'));\n    }\n  });\n  return record ? { [dir.substr(dir.lastIndexOf('\\\\') + 1, dir.length)]: filesList } : filesList;\n}\n\nfilesList = readFileList(pathName, false)\n\nfs.writeFile(jsonPath, JSON.stringify(filesList, '', '\\t'), err => err);\n\nconsole.log('成功')));\n\n```\n\n## 文件操作\n\n```js\nconst fs = require('fs')\n\n// 读文件\nconst data = fs.readFileSync('demo.txt', 'utf-8')\n// 写文件\nconst logFile = fs.createWriteStream('./outPut.txt', {\n  flags: 'a', // 追加写入\n  encoding: 'utf-8', // utf8编码\n})\n```\n\n"}}]);