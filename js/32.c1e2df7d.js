(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{660:function(n,o){n.exports=" \x3c!-- \ntitle: 02-常用函数\nsort: \n--\x3e\n\n## 激活函数\n\n![image-20210130161646295](https://img-1257284600.cos.ap-beijing.myqcloud.com/2021/image-20210130161646295.png)\n\n- Leaky ReLU\n\n![img](https://img-1257284600.cos.ap-beijing.myqcloud.com/2021/u=2147037458,4155023785&fm=26&gp=0.jpg)\n\n- SELU\n\n  ![img](https://img-1257284600.cos.ap-beijing.myqcloud.com/2021/u=2448423465,3835849782&fm=11&gp=0.jpg)\n\n- softplus\n\n  ![img](https://img-1257284600.cos.ap-beijing.myqcloud.com/2021/u=2661888347,1277836998&fm=11&gp=0.jpg)\n\n## 损失函数\n\n> 衡量输出值与输入值的损失\n>\n> $loss=(wx+b-y)^2$\n\n| torch.nn         | torch.nn.functional (F) | 公式                          |\n| :--------------- | :---------------------- | ----------------------------- |\n| CrossEntropyLoss | cross_entropy           | $−\\sum_{k=1}^N(p_k∗\\log q_k)$ |\n| LogSoftmax       | log_softmax             |                               |\n| NLLLoss          | nll_loss                | $f(x,class)=−x[class]$        |\n\n### Softmax\n\n> `归一化指数函数`\n>\n> 将数据转变成相加为 1 的概率\n\n$ S*{i} = \\frac{e^i}{\\sum*{j}e^j} $\n\n### LogSoftmax\n\n> **log**和**softmax**合并执行\n\n### CrossEntropyLoss\n\n> 交叉熵\n\n## 检验优化算法\n\n- Himmelblau\n\n  $ f(x,y)=(x^2+y-11)^2+(x+y^2-7)^2 $\n"}}]);