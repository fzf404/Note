(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{748:function(n,t){n.exports='\x3c!--\ntitle: 05-中断\nsort:\n--\x3e\n\n# 中断\n\n![image-20200904203225205](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20200904203225.png)\n\n![image-20200904202234877](https://img-1257284600.cos.ap-beijing.myqcloud.com/2020/20200904202234.png)\n\n## 外部中断\n\n```c\n#include "reg51.h"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit led=P2^0;\nsbit k3=P3^2;\n\nvoid delay(u16 i)\n{\n    while(i--);\n}\n\nvoid Int0Init()\n{\n\tIT0=1;\t// 下降沿触发\n\tEX0=1;\t// 打开外部中断\n\tEA=1;\t// 打开总中断\n}\n\nvoid main()\n{\n\tInt0Init();\n    while(1);\n}\n\nvoid Int0() interrupt 0\n{\n\tdelay(1000);\n\tif(k3==0)\n\t{\n\t\tled=~led;\n\t}\n}\n```\n\n## 定时器\n\n```c\n#include "reg51.h"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit led=P2^0;\n\nvoid Timer0Init()\n{\n\tTMOD|=0x01;\n\tTH0=0xFC;\n\tTL0=0X18;\n\tET0=1;\t// 打开中断\n\tEA=1;\t// 打开总中断\n\tTR0=1;\n}\n\nvoid main()\n{\n\tTimer0Init();\n    while(1);\n}\n\nvoid Time0() interrupt 1\n{\n\tstatic u16 i;\n\tTH0=0xFC;\n\tTL0=0X18;\n\ti++;\n\tif(i==1000)\n\t{\n\t\ti=0;\n\t\tled=~led;\n\t}\n}\n```\n\n## NE555\n\n```c\n#include "reg51.h"\n#define GPIO_DIG P0\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit LSA = P2 ^ 2;\nsbit LSB = P2 ^ 3;\nsbit LSC = P2 ^ 4;\n\nu8 code smgduan[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f,\n\t\t\t\t\t 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};\n\nunsigned long TimeCount;\nunsigned long Freq;\n\nu8 DisplayData[8];\n\nvoid delay(u16 i)\n{\n\twhile (i--)\n\t\t;\n}\n\nvoid DigDisplay()\t// 数码管段选显示\n{\n\tu8 i;\n\tfor (i = 0; i < 8; i++)\n\t{\n\t\tswitch (i)\n\t\t{\n\t\tcase 0:\n\t\t\tLSA = 0;\n\t\t\tLSB = 0;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tLSA = 1;\n\t\t\tLSB = 0;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tLSA = 0;\n\t\t\tLSB = 1;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tLSA = 1;\n\t\t\tLSB = 1;\n\t\t\tLSC = 0;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tLSA = 0;\n\t\t\tLSB = 0;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tLSA = 1;\n\t\t\tLSB = 0;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tLSA = 0;\n\t\t\tLSB = 1;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tLSA = 1;\n\t\t\tLSB = 1;\n\t\t\tLSC = 1;\n\t\t\tbreak;\n\t\t}\n\t\tGPIO_DIG = DisplayData[i];\n\t\tdelay(100);\n\t\tGPIO_DIG = 0x00; // 清零\n\t}\n}\n\nvoid TimerConfig()\t// 初始化定时器\n{\n\tTMOD = 0x51;\t// 设置工作模式\n\n\tTH0 = 0x3C;\t\t// 计数次数\n\tTL0 = 0XB0;\n\n\tET0 = 1; // 打开中断\n\tET1 = 1;\n\n\tEA = 1; // 打开总中断\n\n\tTR0 = 1;\n\tTR1 = 1;\n}\n\nvoid main()\n{\n\tTimerConfig();\t// 初始化\n\twhile (1)\n\t{\n\t\tif (TR1 == 0)\n\t\t{\n\t\t\tFreq = Freq + TL1;\n\t\t\tFreq = Freq + (TH1 * 256);\n\n\t\t\tDisplayData[0] = smgduan[Freq % 1000000 / 100000];\n\t\t\tDisplayData[1] = smgduan[Freq % 100000 / 10000];\n\t\t\tDisplayData[2] = smgduan[Freq % 10000 / 1000];\n\t\t\tDisplayData[3] = smgduan[Freq % 1000 / 100];\n\t\t\tDisplayData[4] = smgduan[Freq % 100 / 10];\n\t\t\tDisplayData[4] = smgduan[Freq % 10];\n\n\t\t\tFreq = 0;\n\n\t\t\tTH1 = 0; \t// 清空寄存器中的值\n\t\t\tTL1 = 0;\n\n\t\t\tTR1 = 1;\n\t\t\tTR0 = 1;\n\t\t}\n\t\tDigDisplay();\n\t}\n}\n\nvoid Time0() interrupt 1\t\t\t// 定时器\n{\n\tTH0 = 0x3C;\n\tTL0 = 0XB0;\n\tTimeCount++;\n\tif (TimeCount == 20)\n\t{\n\t\tTimeCount = 0;\n\t\tTR1 = 0;\n\t\tTR0 = 0;\n\t}\n}\n\nvoid Timer1() interrupt 3\t\t// 计数器\n{\n\t// 当计数器到达65536（溢出时），触发中断，则频率+65536\n\tFreq += 65536;\n}\n```\n\n## 串口\n\n```c\n#include "reg51.h"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nvoid UsartInit()\n{\n\tTMOD=0x20;\n\tTH1=0xF3;\n\tTL1=0xF3;\n\tPCON=0x80;\n\tTR1=1;\n\tSCON=0x50;\n\tES=1;\n\tEA=1;\n}\n\nvoid main()\n{\n\tUsartInit();\n\twhile(1);\n}\n\nvoid Usart() interrupt 4\n{\n\tu8 receiveData;\n\treceiveData=SBUF;\n\tRI=0;\n\tSBUF=receiveData;\n\twhile(!TI);\n\tTI=0;\n\n}\n```\n'}}]);