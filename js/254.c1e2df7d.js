(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{882:function(n,t){n.exports="\x3c!--\ntitle: 01-Hexo基础\nsort:\n--\x3e\n\n# Hexo 基础\n\n## 介绍\n\n- Vue 使用的是 Hexo。\n\n- hexo 是一个博客工具，不需要部署到服务器。\n- 也就是说，它是一个静态界面生成、上传的工具。\n\n## 安装\n\n- 需要 git 与 node.js\n- npm 换源：`npm install -g cnpm --registry=https://registry.npm.taobao.org`\n- 使用 cnpm 安装 Hexo：`cnpm install -g hexo-cli`\n\n## 建站\n\n- 初始化 hexo 文件夹：（需要翻墙）\n\n  ```bash\n  hexo init <folder>\n  cd <folder>\n  npm install\n  ```\n\n- 建立第一个网站：\n\n  ```bash\n  hexo g\t\t\t# 建立public文件\n  hexo s\t\t\t# 开启服务\n  ```\n\n- 写下第一篇文章：\n\n  ```bash\n  hexo new 'post title'\t\t\t# 建立一篇标题为“post title”的文章\n  hexo new draft 'draft title'\t# 建立一篇不被渲染的草稿\n  ```\n\n- makedown 的默认配置：`Front Matter`\n\n## 命令\n\n- `hexo init [folder]`\n\n  > 新建一个网站\n\n- `hexo new [layout] <title>`\n\n  > 新建一篇文章\n  >\n  > 如果没有设置`layout`，默认使用\\_config,yml\n\n  | 参数          | 描述                         |\n  | ------------- | ---------------------------- |\n  | -p, --ptah    | 自定义文章路径               |\n  | -r, --replace | 存在同名文章则替换           |\n  | -s, --slug    | 新文章的文件名和发布后的 URL |\n\n  ```bash\n  hexo --path about/me \"about me\"\n  # 创建一个 source/about/me.md 文件，Front Matter 的 title 为 \"About me\"\n  ```\n\n- `hexo generate(g)`\n\n  > 生成静态文件\n\n  | 选项         | 描述                   |\n  | ------------ | ---------------------- |\n  | -d, --deploy | 文件生成后立即部署网站 |\n  | -w, --watch  | 监视文件变动（调试用） |\n  | -b, --bail   | 抛出异常               |\n  | -f, --force  | 强制重新生成文件       |\n\n- `hexo publish [layout] <filename>`\n\n  > 发表草稿\n\n- `hexo sever`\n\n  > 启动服务器，默认为：http://localhost:4000\n\n  | 选项         | 描述           |\n  | ------------ | -------------- |\n  | -p, --port   | 重设端口       |\n  | -s, --static | 只使用静态文件 |\n  | -l, --log    | 启用日志       |\n\n- `hexo deploy(d)`\n\n  > github 部署网站\n\n  - `npm install --save hexo-deployer-git`\n\n  - 编辑`_congig.yml`\n\n    ```yml\n    deploy:\n      type: git\n      repo: git@github.com:fzf404/fzf404.github.io.git\n      master: master\n    ```\n\n- `hexo render -o`\n\n  > 批量渲染文件\n  >\n  > -o, --output：输出路径\n\n- `hexo clean`\n\n  > 清理缓存文件\n\n- `hexo list <type>`\n\n  > 列出网站资料\n\n- `hexo --cwd /path/to/cwd`\n\n  > 自定义工作目录的路径\n"}}]);