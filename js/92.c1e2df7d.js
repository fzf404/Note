(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{720:function(n,t){n.exports="\x3c!--\ntitle: 07-Vuex\nsort:\n--\x3e\n\n## Vuex\n\n> 方便各个嵌套组件中参数的传递\n>\n> `yarn add vuex`\n\n### 速查表\n\n```js\n// 获取store中state的值\nthis.$store.state.data;\n// 触发mutations\nthis.$store.commit('SET_DATA', { data })\n// 触发Action\nthis.$store.dispatch('getData')\n\n// 辅助函数映射\nimport { mapState, mapActions } from 'vuex'\n\n...mapState('userModule', {\n      username: state => state.username\n    })\n...mapActions('userModule', { login: 'login' , info: 'info'}),\n```\n\n### 状态属性 (state)\n\n```vue\n<script>\nexport default {\n  computed: {\n    product() {\n      // 从store中获取state\n      return this.$store.state.products[0];\n    },\n  },\n};\n<\/script>\n```\n\n### 修改属性 (mutations)\n\n> 修改 state 的值\n\n```vue\n<script>\nexport default {\n  mutations: {\n    ADD_TO_CART(state, payload) {\n      const { product } = payload;\n      state.cart.push(product);\n    },\n    REMOVE_FROM_CART(state, payload) {\n      const { productId } = payload;\n      state.cart = state.cart.filter((product) => product._id !== productId);\n    },\n  },\n};\n<\/script>\n\n// 触发\n<script>\nexport default {\n  methods: {\n    addToCart(product) {\n      this.$store.commit(\"ADD_TO_CART\", {\n        product,\n      });\n    },\n  },\n};\n<\/script>\n```\n\n### 响应事件 (action)\n\n> 响应视图层分发的事件\n\n```vue\n// 定义\n<script>\nactions: {\n  allProducts({ commit }) {\n    commit('ALL_PRODUCTS')\n\n    axios.get(`${API_BASE}/products`).then(response => {\n      console.log('response', response);\n      commit('ALL_PRODUCTS_SUCCESS', {\n        products: response.data,\n      });\n    })\n  }\n}\n<\/script>\n\n// 触发\n<script>\n// 生命周期\ncreated () {\n  if (this.products.length === 0) {\n    // 触发父组件action\n    this.$store.dispatch('allProducts')\n  }\n},\n<\/script>\n```\n"}}]);