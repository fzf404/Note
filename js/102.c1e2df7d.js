(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{730:function(n,e){n.exports="\x3c!--\ntitle: 01-初探Electron\nsort:\n--\x3e\n\n## 安装\n\n```bash\nmkdir first-electron && cd electron\nyarn init\nyarn add --dev electron\n```\n\n## 使用\n\n> `main.js`\n\n```js\nconst { app, BrowserWindow } = require('electron')\nconst path = require('path')\n\nfunction createWindow() {\n  const win = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      // 引入渲染器\n      preload: path.join(__dirname, 'preload.js'),\n    },\n  })\n  // 加载 index.html\n  win.loadFile('index.html')\n  // 打开开发工具\n  // mainWindow.webContents.openDevTools()\n}\n// 监听 Ready\napp.whenReady().then(() => {\n  // 创建窗口\n  createWindow()\n  // 兼容 Mac\n  app.on('activate', function () {\n    if (BrowserWindow.getAllWindows().length === 0) createWindow()\n  })\n})\n// 监听应用退出\napp.on('window-all-closed', function () {\n  if (process.platform !== 'darwin') app.quit()\n})\n\n```\n\n> `index.html`\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    \x3c!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP --\x3e\n    <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self'\" />\n    <meta http-equiv=\"X-Content-Security-Policy\" content=\"default-src 'self'; script-src 'self'\" />\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    We are using Node.js <span id=\"node-version\"></span>, Chromium <span id=\"chrome-version\"></span>, and Electron\n    <span id=\"electron-version\"></span>.\n  </body>\n</html>\n\n```\n\n> `preload.js`\n\n```js\nwindow.addEventListener('DOMContentLoaded', () => {\n  // 替换文本\n  const replaceText = (selector, text) => {\n    const element = document.getElementById(selector)\n    if (element) element.innerText = text\n  }\n\n  for (const dependency of ['chrome', 'node', 'electron']) {\n    replaceText(`${dependency}-version`, process.versions[dependency])\n  }\n})\n\n```\n\n## 运行/打包\n\n```bash\nyarn add --dev @electron-forge/cli\nnpx electron-forge import\n# 运行\nyarn start\n# 打包\nyarn make\n# 打包目录\nout/\n├── out/make/zip/darwin/x64/xxx.zip\n├── ...\n└── out/xxx/xxx/Contents/MacOS/xxx\n```\n"}}]);